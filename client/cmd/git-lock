#!/usr/bin/env bash
# usage $git-lock [--ack|--rel] [file]

lck_flag=''
file=''
user=''
repo=''
branch=''

server_cmd='git-file-locker'
server_cmd_ack="$server_cmd '--lock=acquire'"
server_cmd_rel="$server_cmd '--lock=release'"
server_cmd_query="$server_cmd '--lock=query'"

error(){
    printf '\nERROR: %s\n\n' "$@"
    return 0
}

help(){
    printf '%s\n' "\$$0 [--ack|--rel|--query] [file_to_lock]"
    printf '%s\n' "--ack                        Try to acquire lock."
    printf '%s\n' "--rel                        Try to release lock."
    printf '%s\n' "--query                      Check if file is already locked."
    printf '%s\n' "--ack | --rel | --query      flags are mutually exclusive."
    printf '%s\n' "-h|--help                    Print this help and exit."
    return 0
}

get_user(){
    un=$(git config user.name)
    um=$(git config user.email)

    if [ -z "$un" ] || [ -z "$um" ]; then
        error "User's name or email is not configured in config."
        exit 1
    fi
    user="$un<$um>"
}

get_repo(){
    repo=$(basename "$(git rev-parse --show-toplevel)")
    repo=${repo%.git}
}

get_branch(){
    branch=$(git rev-parse --abbrev-ref HEAD)
}

ack_lock(){
    git pull --upload-pack="$server_cmd_ack '--repo=$repo' '--branch=$branch' '--user=$user' '--file=$file' "
}

rel_lock(){
    git pull --upload-pack="$server_cmd_rel '--repo=$repo' '--branch=$branch' '--user=$user' '--file=$file' "
}

query_lock(){
    git pull --upload-pack="$server_cmd_query '--repo=$repo' '--branch=$branch' '--user=$user' '--file=$file' "
}

while [[ $# -gt 0 ]]; do
    case "$1" in
        --ack)
            [ -n "$lck_flag" ] && error "Multiple flags defined." && help && exit 1
            lck_flag='ACK'
            shift
            ;;
        --rel)
            [ -n "$lck_flag" ] && error "Multiple flags defined." && help && exit 1
            lck_flag='REL'
            shift
            ;;
        --query)
            [ -n "$lck_flag" ] && error "Multiple flags defined." && help && exit 1
            lck_flag='QUERY'
            shift
            ;;
        -h|--help)
            help
            exit 0
            ;;
        *)
            [ -n "$file" ] && error "Multiple files specified." && help && exit 1
            file="$1"
            shift
            ;;
    esac
done


if [ -z "$lck_flag" ]; then
    error "No flag specified. confused, what to do!!. tried help?"
    exit 1
fi

if [ -z "$file" ]; then
    error "No files specified. confused, what to do!!. tried help?"
    exit 1
fi

get_user

if [ -z "$user" ]; then
    error "User is not configured properly for git usage. tried git help config?"
    exit 1
fi

get_repo

if [ -z "$repo" ]; then
    error "Could not get repo name."
    exit 1
fi

get_branch

if [ -z "$branch" ]; then
    error "Could not get branch name."
    exit 1
fi


case "$lck_flag" in
    ACK)
        ack_lock
        ;;
    REL)
        rel_lock
        ;;
    QUERY)
        query_lock
        ;;
    *)
        error "Invalid flag value <$lck_flag>. tried help?"
        exit 1
        ;;
esac

